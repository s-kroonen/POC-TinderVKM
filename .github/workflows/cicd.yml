name: CI/CD Pipeline

on:
    workflow_dispatch:
        inputs:
            target:
                description: "Choose what to deploy"
                required: false
                default: "full"
                type: choice
                options:
                    - full
                    - backend
                    - frontend
                    - rollback

jobs:
    # ---------- BACKEND JOB ----------
    backend:
        name: Backend Build & Test
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install dependencies
              run: npm ci

            - name: Run backend build
              run: npm run build

            - name: Run backend tests
              env:
                  MONGO_URI: ${{ secrets.MONGO_URI }}
              run: |
                  # Retry tests to avoid transient Mongo issues in CI
                  for i in 1 2 3; do
                    npm test && break || (echo "Retrying tests ($i/3)" && sleep 5)
                  done

    # ---------- FRONTEND JOB ----------
    frontend:
        name: Frontend Build & Test
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install dependencies
              run: npm ci

            - name: Run frontend build
              run: npm run build

            - name: Run frontend tests
              env:
                  CI: true
              run: |
                  # Handle flaky tests on CI (React sometimes fails due to jsdom timing)
                  for i in 1 2 3; do
                    npm test && break || (echo "Retrying tests ($i/3)" && sleep 5)
                  done

    # ---------- DEPLOY JOB ----------
    deploy:
        name: Deploy to Portainer
        runs-on: ubuntu-latest
        needs: [backend, frontend]
        if: ${{ github.event.inputs.target == 'full' || github.event.inputs.target == '' }}
        steps:
            - name: Trigger Portainer webhook
              run: |
                  echo "Triggering full-stack deploy..."
                  curl -s -X POST "${{ secrets.PORTAINER_WEBHOOK_URL }}" || exit 1

    # ---------- INDIVIDUAL DEPLOY JOBS ----------
    deploy-backend:
        name: Deploy Backend Only
        runs-on: ubuntu-latest
        needs: backend
        if: ${{ github.event.inputs.target == 'backend' }}
        steps:
            - name: Trigger backend deploy webhook
              run: |
                  echo "Deploying backend only..."
                  curl -s -X POST "${{ secrets.PORTAINER_BACKEND_WEBHOOK }}" || exit 1

    deploy-frontend:
        name: Deploy Frontend Only
        runs-on: ubuntu-latest
        needs: frontend
        if: ${{ github.event.inputs.target == 'frontend' }}
        steps:
            - name: Trigger frontend deploy webhook
              run: |
                  echo "Deploying frontend only..."
                  curl -s -X POST "${{ secrets.PORTAINER_FRONTEND_WEBHOOK }}" || exit 1

    # ---------- ROLLBACK JOB ----------
    rollback:
        name: Rollback Deployment
        runs-on: ubuntu-latest
        if: ${{ github.event.inputs.target == 'rollback' }}
        steps:
            - name: Rollback to previous stable tag
              run: |
                  echo "Rolling back to last stable release..."
                  PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
                  echo "Rolling back to $PREV_TAG"
                  git checkout $PREV_TAG
                  curl -s -X POST "${{ secrets.PORTAINER_WEBHOOK_URL }}" || exit 1
